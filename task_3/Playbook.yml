---
- name: Install Docker
  hosts: all
  become: yes
  tasks:
    - name: Install Docker on Ubuntu
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == "Debian"
      block:
        - name: Update apt package cache
          apt:
            update_cache: yes

        - name: Install dependencies
          apt:
            name:
              - apt-transport-https
              - ca-certificates
              - curl
              - software-properties-common

        - name: Add Docker GPG key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Add Docker APT repository
          apt_repository:
            repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
            state: present

        - name: Update apt package cache (again)
          apt:
            update_cache: yes

        - name: Install Docker
          apt:
            name: docker-ce
            state: present

    - name: Install Docker on CentOS
      when: ansible_distribution == 'CentOS'
      block:
        - name: Install required packages
          yum:
            name:
              - yum-utils
              - device-mapper-persistent-data
              - lvm2
            state: present

        - name: Add Docker repository
          get_url:
            url: https://download.docker.com/linux/centos/docker-ce.repo
            dest: /etc/yum.repos.d/docker-ce.repo

        - name: Install Docker packages
          yum:
            name:
              - docker-ce
            state: present

    - name: Ensure docker group exists
      group:
        name: docker
        state: present

    - name: Add user in docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Start docker.service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Check docker
      command: "docker --version"

- name: Launch script in container
  hosts: all
  tasks:
    - name: Copy script
      copy:
        src: ./script.py
        dest: ./script.py

    - name: Copy Dockerfile
      copy:
        src: ./Dockerfile
        dest: ./Dockerfile

    - name: Reset_connection
      meta:
        reset_connection

    - name: Build image
      command: "docker build -t test-telecom ."

    - name: Run container
      command: "docker run --name test-telecom-container test-telecom"

    - name: Check exit code
      command: "docker inspect test-telecom-container --format='{% raw %}{{.State.ExitCode}}{% endraw %}'"
      register: exitcode

    - name: Check script output
      command: "docker logs test-telecom-container"
      register: output

    - debug: msg="ExitCode - {{ exitcode.stdout_lines }}"

    - debug: msg="{{  output }}"
